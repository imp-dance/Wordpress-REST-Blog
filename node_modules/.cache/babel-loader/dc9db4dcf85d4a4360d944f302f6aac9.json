{"ast":null,"code":"import _slicedToArray from \"/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/wordpress-rest-blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/wordpress-rest-blog/src/components/OnOffDarkmode.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nexport const OnOffDarkmode = props => {\n  const _useState = useState(\"Darkmode\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        text = _useState2[0],\n        setText = _useState2[1];\n\n  useEffect(() => {\n    if (localStorage.getItem(\"imp-site-dm\") === \"true\") {\n      document.body.className = \"darkModeBody\";\n      setText(\"Lightmode\");\n    }\n  }, []);\n\n  const toggleDM = () => {\n    const currentSettings = localStorage.getItem(\"imp-site-dm\") || null;\n    console.log(currentSettings);\n\n    if (currentSettings === \"true\") {\n      localStorage.setItem(\"imp-site-dm\", \"false\");\n      document.body.className = \"\";\n      setText(\"Darkmode\");\n      props.onChange !== undefined && props.onChange(false);\n    } else {\n      localStorage.setItem(\"imp-site-dm\", \"true\");\n      document.body.className = \"darkModeBody\";\n      setText(\"Lightmode\");\n      props.onChange !== undefined && props.onChange(true);\n    }\n  };\n\n  return React.createElement(\"div\", {\n    role: \"button\",\n    className: \"onOffDM\",\n    onClick: toggleDM,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, text);\n};\nOnOffDarkmode.propTypes = {\n  onChange: PropTypes.func\n};\nOnOffDarkmode.defaultProps = {\n  onChange: () => {}\n};\nexport default OnOffDarkmode;","map":{"version":3,"sources":["/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/wordpress-rest-blog/src/components/OnOffDarkmode.js"],"names":["React","useState","useEffect","PropTypes","OnOffDarkmode","props","text","setText","localStorage","getItem","document","body","className","toggleDM","currentSettings","console","log","setItem","onChange","undefined","propTypes","func","defaultProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAAA,oBACZJ,QAAQ,CAAC,UAAD,CADI;AAAA;AAAA,QAC7BK,IAD6B;AAAA,QACvBC,OADuB;;AAEpCL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,YAAY,CAACC,OAAb,CAAqB,aAArB,MAAwC,MAA5C,EAAoD;AAClDC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,GAA0B,cAA1B;AACAL,MAAAA,OAAO,CAAC,WAAD,CAAP;AACD;AACF,GALQ,EAKN,EALM,CAAT;;AAMA,QAAMM,QAAQ,GAAG,MAAM;AACrB,UAAMC,eAAe,GAAGN,YAAY,CAACC,OAAb,CAAqB,aAArB,KAAuC,IAA/D;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ;;AACA,QAAIA,eAAe,KAAK,MAAxB,EAAgC;AAC9BN,MAAAA,YAAY,CAACS,OAAb,CAAqB,aAArB,EAAoC,OAApC;AACAP,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,GAA0B,EAA1B;AACAL,MAAAA,OAAO,CAAC,UAAD,CAAP;AACAF,MAAAA,KAAK,CAACa,QAAN,KAAmBC,SAAnB,IAAgCd,KAAK,CAACa,QAAN,CAAe,KAAf,CAAhC;AACD,KALD,MAKO;AACLV,MAAAA,YAAY,CAACS,OAAb,CAAqB,aAArB,EAAoC,MAApC;AACAP,MAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,GAA0B,cAA1B;AACAL,MAAAA,OAAO,CAAC,WAAD,CAAP;AACAF,MAAAA,KAAK,CAACa,QAAN,KAAmBC,SAAnB,IAAgCd,KAAK,CAACa,QAAN,CAAe,IAAf,CAAhC;AACD;AACF,GAdD;;AAeA,SACE;AAAK,IAAA,IAAI,EAAC,QAAV;AAAmB,IAAA,SAAS,EAAC,SAA7B;AAAuC,IAAA,OAAO,EAAEL,QAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,IADH,CADF;AAKD,CA5BM;AA6BPF,aAAa,CAACgB,SAAd,GAA0B;AACxBF,EAAAA,QAAQ,EAAEf,SAAS,CAACkB;AADI,CAA1B;AAGAjB,aAAa,CAACkB,YAAd,GAA6B;AAC3BJ,EAAAA,QAAQ,EAAE,MAAM,CAAE;AADS,CAA7B;AAGA,eAAed,aAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const OnOffDarkmode = props => {\n  const [text, setText] = useState(\"Darkmode\");\n  useEffect(() => {\n    if (localStorage.getItem(\"imp-site-dm\") === \"true\") {\n      document.body.className = \"darkModeBody\";\n      setText(\"Lightmode\");\n    }\n  }, []);\n  const toggleDM = () => {\n    const currentSettings = localStorage.getItem(\"imp-site-dm\") || null;\n    console.log(currentSettings);\n    if (currentSettings === \"true\") {\n      localStorage.setItem(\"imp-site-dm\", \"false\");\n      document.body.className = \"\";\n      setText(\"Darkmode\");\n      props.onChange !== undefined && props.onChange(false);\n    } else {\n      localStorage.setItem(\"imp-site-dm\", \"true\");\n      document.body.className = \"darkModeBody\";\n      setText(\"Lightmode\");\n      props.onChange !== undefined && props.onChange(true);\n    }\n  };\n  return (\n    <div role=\"button\" className=\"onOffDM\" onClick={toggleDM}>\n      {text}\n    </div>\n  );\n};\nOnOffDarkmode.propTypes = {\n  onChange: PropTypes.func\n};\nOnOffDarkmode.defaultProps = {\n  onChange: () => {}\n};\nexport default OnOffDarkmode;\n"]},"metadata":{},"sourceType":"module"}