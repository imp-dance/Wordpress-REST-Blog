{"ast":null,"code":"var _jsxFileName = \"/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/wordpress-rest-blog/src/components/Articles.js\";\nimport React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport Comment from \"./Comment\";\nimport CommentPoster from \"./CommentPoster\";\nimport \"../App.scss\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Loader from \"./Loader\";\nimport { FacebookShareButton, RedditShareButton, LinkedinShareButton, TwitterShareButton, EmailShareButton } from \"react-share\";\n\nconst HtmlToReactParser = require(\"html-to-react\").Parser;\n\nclass Articles extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      blogPosts: [{\n        id: 0,\n        title: {\n          rendered: \"\"\n        },\n        excerpt: {\n          rendered: \"\"\n        },\n        content: {\n          rendered: \"\"\n        },\n        categories: []\n      }],\n      comments: [{\n        author_name: \"\",\n        content: {\n          rendered: \"\"\n        },\n        author_avatar_urls: {\n          48: \"\"\n        },\n        date: \"\"\n      }],\n      categories: [{\n        name: \"\",\n        id: null\n      }],\n      sortArticles: null,\n      postID: this.props.postID || false,\n      renderComments: false,\n      commentEmail: \"\",\n      commentName: \"\",\n      commentContent: \"\",\n      commentReply: null\n    };\n\n    this.checkForForm = () => {\n      let form = document.querySelector(\".wpforms-form\");\n\n      if (form !== null) {\n        form.setAttribute(\"action\", \"https://impedans.me/\" + form.getAttribute(\"action\"));\n        console.log(\"Updated form\");\n      }\n    };\n\n    this.goToArticle = event => {\n      window.location.href = `${this.props.WPConfig.baseName}post/${event.target.parentElement.getAttribute(\"data-id\")}`;\n    };\n\n    this.sortArticles = event => {\n      let categoryID = event.target.getAttribute(\"data-categoryid\");\n      this.setState({\n        sortArticles: categoryID\n      });\n      this.scrollToTop();\n    };\n\n    this.scrollToTop = () => {\n      window.scrollTo(0, 0);\n      document.body.scrollTop = 0;\n    };\n\n    this.reactParse = parse => {\n      let HTMLToReactParser = new HtmlToReactParser();\n      let reactElement = HTMLToReactParser.parse(parse);\n      let string = ReactDOMServer.renderToStaticMarkup(reactElement);\n      return string.replace(\"<code>\", \"<code class='markUpBaby'>\");\n    };\n\n    this.parseDate = date => {\n      let y = date.substring(0, 4);\n      let m = date.substring(5, 7);\n      let d = date.substring(8, 10);\n      let h = date.substring(11, 13);\n      let min = date.substring(14, 16);\n      return `${h}:${min} ${d}/${m}/${y}`;\n    };\n\n    this.updateComments = newCommentState => {\n      this.setState({\n        newComments: newCommentState\n      });\n    };\n\n    this.goToMusic = () => {\n      window.location.href = \"/blog/post/128\";\n    };\n\n    this.goToAbout = () => {\n      window.location.href = \"/blog/post/136\";\n    };\n\n    this.goToCV = () => {\n      window.open(\"https://haakon.underbakke.net/cv\", \"_blank\");\n    };\n\n    this.goToContact = () => {\n      window.location.href = \"https://impedans.me/web/contact-me/\";\n    };\n\n    this.ignoreAction = event => {\n      event.preventDefault();\n    };\n\n    this.goHome = () => {\n      window.location.href = \"/articles\";\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.postID === false) {\n      axios.get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/posts`).then(res => res.data).then(blogPosts => {\n        this.setState({\n          blogPosts: blogPosts,\n          loaded: true\n        });\n      });\n      axios.get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/categories`).then(res => res.data).then(categories => {\n        this.setState({\n          categories: categories\n        });\n      });\n      this.scrollToTop();\n    } else {\n      axios.get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/posts/?include[]=${this.state.postID}`).then(res => res.data).then(blogPosts => {\n        this.setState({\n          blogPosts: blogPosts,\n          loaded: true\n        }, () => {\n          setTimeout(this.checkForForm, 1500);\n        });\n      });\n      axios.get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/comments/?post=${this.state.postID}`).then(res => res.data).then(comments => {\n        this.setState({\n          comments: comments\n        });\n      });\n      this.scrollToTop();\n    }\n  }\n\n  render() {\n    let render = [];\n    let categoryItems = [];\n    this.state.categories.forEach((category, index) => {\n      if (category.id !== 1) {\n        categoryItems.push(React.createElement(\"li\", {\n          key: \"art\" + 1888 + index,\n          \"data-id\": category.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          onClick: this.sortArticles,\n          \"data-categoryid\": category.id,\n          className: this.state.sortArticles === null || parseInt(this.state.sortArticles) === parseInt(category.id) ? \"white\" : \"gray\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }, category.name)));\n      }\n    });\n\n    if (this.state.postID !== false) {\n      categoryItems.push(React.createElement(\"li\", {\n        key: \"fart\" + 1923,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/articles\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"\\u2039 All posts\"))));\n    }\n    /* \n    categoryItems.push(\n    <li key={\"bart\" + 1923} className=\"seperator\">\n      |\n    </li>\n    ); */\n\n\n    render.push(React.createElement(\"nav\", {\n      key: \"part\" + 9991,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, categoryItems)));\n    this.state.blogPosts.forEach((blogPost, index) => {\n      if (this.state.sortArticles === null || blogPost.categories.includes(parseInt(this.state.sortArticles)) || blogPost.categories === parseInt(this.state.sortArticles)) {\n        let title = this.reactParse(blogPost.title.rendered);\n        let body = this.state.postID === false ? this.reactParse(blogPost.excerpt.rendered) : this.reactParse(blogPost.content.rendered);\n\n        if (this.state.postID === false) {\n          body = body.substring(0, body.length - 9) + \"...</p>\";\n        }\n\n        let className = this.state.postID === false ? \"collapsed\" : \"open\";\n        /*if (index === 0 && this.state.sortArticles === null) {\n          className = \"open\"; // Latest article should be open on index\n          body = this.reactParse(blogPost.content.rendered);\n        }*/\n\n        if (this.state.postID === false && !blogPost.categories.includes(1) || this.state.postID !== false) {\n          render.push(React.createElement(\"article\", {\n            key: index,\n            className: className,\n            \"data-id\": blogPost.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 262\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/articles/post/\" + blogPost.id,\n            \"data-id\": blogPost.id,\n            className: \"articleLink\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 263\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            \"data-id\": blogPost.id,\n            dangerouslySetInnerHTML: {\n              __html: title\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 268\n            },\n            __self: this\n          })), this.state.postID === false ? React.createElement(Link, {\n            to: \"/articles/post/\" + blogPost.id,\n            \"data-id\": blogPost.id,\n            className: \"articleBodyLink\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 276\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"body\",\n            \"data-id\": blogPost.id,\n            dangerouslySetInnerHTML: {\n              __html: body\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281\n            },\n            __self: this\n          })) : React.createElement(\"div\", {\n            className: \"body\",\n            onClick: this.state.postID === false ? this.goToArticle : () => {},\n            \"data-id\": blogPost.id,\n            dangerouslySetInnerHTML: {\n              __html: body\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 290\n            },\n            __self: this\n          })));\n        }\n      }\n    });\n\n    if (this.state.postID !== false) {\n      // A specific post is open\n      if (this.state.blogPosts[0].title.rendered !== \"\") {\n        let metaDescription = this.reactParse(this.state.blogPosts[0].excerpt.rendered);\n        metaDescription = metaDescription.substring(3);\n        metaDescription = metaDescription.slice(0, -5);\n        let title = this.reactParse(this.state.blogPosts[0].title.rendered);\n        render.push(React.createElement(Helmet, {\n          key: \"123653\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, React.createElement(\"title\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 317\n          },\n          __self: this\n        }, title), React.createElement(\"meta\", {\n          name: \"description\",\n          content: metaDescription,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        })));\n      }\n\n      let parentComments = this.state.comments.filter(comment => comment.parent === 0);\n      let url = window.location.href;\n      render.push(React.createElement(\"h5\", {\n        key: \"aaart\" + 9994,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, \"Share on...\"));\n      render.push(React.createElement(\"div\", {\n        className: \"social\",\n        key: \"arts\" + 9993,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(FacebookShareButton, {\n        url: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      }, \"Facebook\"), React.createElement(RedditShareButton, {\n        url: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330\n        },\n        __self: this\n      }, \"Reddit\"), React.createElement(LinkedinShareButton, {\n        url: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331\n        },\n        __self: this\n      }, \"Linkedin\"), React.createElement(TwitterShareButton, {\n        url: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332\n        },\n        __self: this\n      }, \"Twitter\"), React.createElement(EmailShareButton, {\n        url: url,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333\n        },\n        __self: this\n      }, \"Email\")));\n\n      if (!this.state.blogPosts[0].categories.includes(1)) {\n        if (this.state.comments.length === 1) {\n          render.push(React.createElement(\"h4\", {\n            key: \"bbbbart\" + 9999,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 338\n            },\n            __self: this\n          }, \"1 Comment\"));\n        } else if (this.state.comments.length === 0) {\n          render.push(React.createElement(\"h4\", {\n            key: \"bbbart\" + 9999,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 341\n            },\n            __self: this\n          }, \"Be the first to leave a comment\"));\n        } else {\n          render.push(React.createElement(\"h4\", {\n            key: \"bbart\" + 9999,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 345\n            },\n            __self: this\n          }, this.state.comments.length, \" Comments\"));\n        }\n\n        render.push(React.createElement(CommentPoster, {\n          postID: this.state.postID,\n          onUpdate: this.updateComments,\n          key: 9991,\n          WPConfig: this.props.WPConfig,\n          comments: this.state.comments,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }));\n        let comments = [];\n        parentComments.forEach((comment, index) => {\n          let parentID = comment.id;\n          let nestedComments = this.state.comments.filter(comment => comment.parent === parentID);\n          comments.push(React.createElement(Comment, {\n            comment: comment,\n            index: index,\n            key: index,\n            onUpdate: this.updateComments,\n            nestedComments: nestedComments,\n            allComments: this.state.comments,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 364\n            },\n            __self: this\n          }));\n        });\n        render.push(React.createElement(\"div\", {\n          className: \"comments-container\",\n          key: 9998,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 375\n          },\n          __self: this\n        }, comments));\n      }\n    } else {\n      render.push(React.createElement(Helmet, {\n        key: \"123653\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(\"title\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"H\\xE5kon Underbakke - Articles\"), React.createElement(\"meta\", {\n        name: \"description\",\n        content: \"Web development & design articles.\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      })));\n    }\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, !this.state.loaded && React.createElement(\"main\", {\n      className: \"showLoading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394\n      },\n      __self: this\n    }, React.createElement(Loader, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    })), React.createElement(\"main\", {\n      className: this.state.loaded ? \"loaded\" : \"loading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, render));\n  }\n\n}\n\nexport default Articles;","map":{"version":3,"sources":["/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/wordpress-rest-blog/src/components/Articles.js"],"names":["React","ReactDOMServer","Comment","CommentPoster","axios","Link","Helmet","Loader","FacebookShareButton","RedditShareButton","LinkedinShareButton","TwitterShareButton","EmailShareButton","HtmlToReactParser","require","Parser","Articles","Component","state","blogPosts","id","title","rendered","excerpt","content","categories","comments","author_name","author_avatar_urls","date","name","sortArticles","postID","props","renderComments","commentEmail","commentName","commentContent","commentReply","checkForForm","form","document","querySelector","setAttribute","getAttribute","console","log","goToArticle","event","window","location","href","WPConfig","baseName","target","parentElement","categoryID","setState","scrollToTop","scrollTo","body","scrollTop","reactParse","parse","HTMLToReactParser","reactElement","string","renderToStaticMarkup","replace","parseDate","y","substring","m","d","h","min","updateComments","newCommentState","newComments","goToMusic","goToAbout","goToCV","open","goToContact","ignoreAction","preventDefault","goHome","componentDidMount","get","siteURL","then","res","data","loaded","setTimeout","render","categoryItems","forEach","category","index","push","parseInt","blogPost","includes","length","className","__html","metaDescription","slice","parentComments","filter","comment","parent","url","parentID","nestedComments"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport Comment from \"./Comment\";\nimport CommentPoster from \"./CommentPoster\";\nimport \"../App.scss\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport Loader from \"./Loader\";\nimport {\n  FacebookShareButton,\n  RedditShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  EmailShareButton\n} from \"react-share\";\nconst HtmlToReactParser = require(\"html-to-react\").Parser;\n\nclass Articles extends React.Component {\n  state = {\n    blogPosts: [\n      {\n        id: 0,\n        title: { rendered: \"\" },\n        excerpt: { rendered: \"\" },\n        content: { rendered: \"\" },\n        categories: []\n      }\n    ],\n    comments: [\n      {\n        author_name: \"\",\n        content: { rendered: \"\" },\n        author_avatar_urls: { 48: \"\" },\n        date: \"\"\n      }\n    ],\n    categories: [\n      {\n        name: \"\",\n        id: null\n      }\n    ],\n    sortArticles: null,\n    postID: this.props.postID || false,\n    renderComments: false,\n    commentEmail: \"\",\n    commentName: \"\",\n    commentContent: \"\",\n    commentReply: null\n  };\n  componentDidMount() {\n    if (this.state.postID === false) {\n      axios\n        .get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/posts`)\n        .then(res => res.data)\n        .then(blogPosts => {\n          this.setState({\n            blogPosts: blogPosts,\n            loaded: true\n          });\n        });\n      axios\n        .get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/categories`)\n        .then(res => res.data)\n        .then(categories => {\n          this.setState({\n            categories: categories\n          });\n        });\n      this.scrollToTop();\n    } else {\n      axios\n        .get(\n          `${this.props.WPConfig.siteURL}wp-json/wp/v2/posts/?include[]=${this.state.postID}`\n        )\n        .then(res => res.data)\n        .then(blogPosts => {\n          this.setState(\n            {\n              blogPosts: blogPosts,\n              loaded: true\n            },\n            () => {\n              setTimeout(this.checkForForm, 1500);\n            }\n          );\n        });\n      axios\n        .get(\n          `${this.props.WPConfig.siteURL}wp-json/wp/v2/comments/?post=${this.state.postID}`\n        )\n        .then(res => res.data)\n        .then(comments => {\n          this.setState({\n            comments: comments\n          });\n        });\n      this.scrollToTop();\n    }\n  }\n  checkForForm = () => {\n    let form = document.querySelector(\".wpforms-form\");\n    if (form !== null) {\n      form.setAttribute(\n        \"action\",\n        \"https://impedans.me/\" + form.getAttribute(\"action\")\n      );\n      console.log(\"Updated form\");\n    }\n  };\n  goToArticle = event => {\n    window.location.href = `${\n      this.props.WPConfig.baseName\n    }post/${event.target.parentElement.getAttribute(\"data-id\")}`;\n  };\n  sortArticles = event => {\n    let categoryID = event.target.getAttribute(\"data-categoryid\");\n    this.setState({ sortArticles: categoryID });\n    this.scrollToTop();\n  };\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n  };\n  reactParse = parse => {\n    let HTMLToReactParser = new HtmlToReactParser();\n    let reactElement = HTMLToReactParser.parse(parse);\n    let string = ReactDOMServer.renderToStaticMarkup(reactElement);\n    return string.replace(\"<code>\", \"<code class='markUpBaby'>\");\n  };\n  parseDate = date => {\n    let y = date.substring(0, 4);\n    let m = date.substring(5, 7);\n    let d = date.substring(8, 10);\n    let h = date.substring(11, 13);\n    let min = date.substring(14, 16);\n    return `${h}:${min} ${d}/${m}/${y}`;\n  };\n  updateComments = newCommentState => {\n    this.setState({ newComments: newCommentState });\n  };\n  goToMusic = () => {\n    window.location.href = \"/blog/post/128\";\n  };\n  goToAbout = () => {\n    window.location.href = \"/blog/post/136\";\n  };\n  goToCV = () => {\n    window.open(\"https://haakon.underbakke.net/cv\", \"_blank\");\n  };\n  goToContact = () => {\n    window.location.href = \"https://impedans.me/web/contact-me/\";\n  };\n  ignoreAction = event => {\n    event.preventDefault();\n  };\n  goHome = () => {\n    window.location.href = \"/articles\";\n  };\n  render() {\n    let render = [];\n    let categoryItems = [];\n    this.state.categories.forEach((category, index) => {\n      if (category.id !== 1) {\n        categoryItems.push(\n          <li key={\"art\" + 1888 + index} data-id={category.id}>\n            <button\n              onClick={this.sortArticles}\n              data-categoryid={category.id}\n              className={\n                this.state.sortArticles === null ||\n                parseInt(this.state.sortArticles) === parseInt(category.id)\n                  ? \"white\"\n                  : \"gray\"\n              }\n            >\n              {category.name}\n            </button>\n          </li>\n        );\n      }\n    });\n    if (this.state.postID !== false) {\n      categoryItems.push(\n        <li key={\"fart\" + 1923}>\n          <Link to=\"/articles\">\n            <button>&#8249; All posts</button>\n          </Link>\n        </li>\n      );\n    } /* \n    categoryItems.push(\n      <li key={\"bart\" + 1923} className=\"seperator\">\n        |\n      </li>\n    ); */\n    render.push(\n      <nav key={\"part\" + 9991}>\n        <ul>\n          {categoryItems}\n          {/* \n          <li>\n            <Link to=\"/post/128\">\n              <button\n                onClick={\n                  this.state.postID !== false\n                    ? this.goToMusic\n                    : this.ignoreAction\n                }\n              >\n                Music\n              </button>\n            </Link>\n          </li>\n          <li>\n            <Link to=\"/post/136\">\n              <button\n                onClick={\n                  this.state.postID !== false\n                    ? this.goToAbout\n                    : this.ignoreAction\n                }\n              >\n                About\n              </button>\n            </Link>\n          </li>\n          <li>\n            <button onClick={this.goToContact}>Contact</button>\n          </li>\n          <li>\n            <button onClick={this.goToCV}>CV</button>\n          </li> */}\n        </ul>\n      </nav>\n    );\n    this.state.blogPosts.forEach((blogPost, index) => {\n      if (\n        this.state.sortArticles === null ||\n        blogPost.categories.includes(parseInt(this.state.sortArticles)) ||\n        blogPost.categories === parseInt(this.state.sortArticles)\n      ) {\n        let title = this.reactParse(blogPost.title.rendered);\n        let body =\n          this.state.postID === false\n            ? this.reactParse(blogPost.excerpt.rendered)\n            : this.reactParse(blogPost.content.rendered);\n        if (this.state.postID === false) {\n          body = body.substring(0, body.length - 9) + \"...</p>\";\n        }\n        let className = this.state.postID === false ? \"collapsed\" : \"open\";\n        /*if (index === 0 && this.state.sortArticles === null) {\n          className = \"open\"; // Latest article should be open on index\n          body = this.reactParse(blogPost.content.rendered);\n        }*/\n        if (\n          (this.state.postID === false && !blogPost.categories.includes(1)) ||\n          this.state.postID !== false\n        ) {\n          render.push(\n            <article key={index} className={className} data-id={blogPost.id}>\n              <Link\n                to={\"/articles/post/\" + blogPost.id}\n                data-id={blogPost.id}\n                className=\"articleLink\"\n              >\n                <h3\n                  data-id={blogPost.id}\n                  dangerouslySetInnerHTML={{\n                    __html: title\n                  }}\n                ></h3>\n              </Link>\n              {this.state.postID === false ? (\n                <Link\n                  to={\"/articles/post/\" + blogPost.id}\n                  data-id={blogPost.id}\n                  className=\"articleBodyLink\"\n                >\n                  <div\n                    className=\"body\"\n                    data-id={blogPost.id}\n                    dangerouslySetInnerHTML={{\n                      __html: body\n                    }}\n                  ></div>\n                </Link>\n              ) : (\n                <div\n                  className=\"body\"\n                  onClick={\n                    this.state.postID === false ? this.goToArticle : () => {}\n                  }\n                  data-id={blogPost.id}\n                  dangerouslySetInnerHTML={{\n                    __html: body\n                  }}\n                ></div>\n              )}\n            </article>\n          );\n        }\n      }\n    });\n    if (this.state.postID !== false) {\n      // A specific post is open\n      if (this.state.blogPosts[0].title.rendered !== \"\") {\n        let metaDescription = this.reactParse(\n          this.state.blogPosts[0].excerpt.rendered\n        );\n        metaDescription = metaDescription.substring(3);\n        metaDescription = metaDescription.slice(0, -5);\n        let title = this.reactParse(this.state.blogPosts[0].title.rendered);\n        render.push(\n          <Helmet key=\"123653\">\n            <title>{title}</title>\n            <meta name=\"description\" content={metaDescription} />\n          </Helmet>\n        );\n      }\n      let parentComments = this.state.comments.filter(\n        comment => comment.parent === 0\n      );\n      let url = window.location.href;\n      render.push(<h5 key={\"aaart\" + 9994}>Share on...</h5>);\n      render.push(\n        <div className=\"social\" key={\"arts\" + 9993}>\n          <FacebookShareButton url={url}>Facebook</FacebookShareButton>\n          <RedditShareButton url={url}>Reddit</RedditShareButton>\n          <LinkedinShareButton url={url}>Linkedin</LinkedinShareButton>\n          <TwitterShareButton url={url}>Twitter</TwitterShareButton>\n          <EmailShareButton url={url}>Email</EmailShareButton>\n        </div>\n      );\n      if (!this.state.blogPosts[0].categories.includes(1)) {\n        if (this.state.comments.length === 1) {\n          render.push(<h4 key={\"bbbbart\" + 9999}>1 Comment</h4>);\n        } else if (this.state.comments.length === 0) {\n          render.push(\n            <h4 key={\"bbbart\" + 9999}>Be the first to leave a comment</h4>\n          );\n        } else {\n          render.push(\n            <h4 key={\"bbart\" + 9999}>{this.state.comments.length} Comments</h4>\n          );\n        }\n        render.push(\n          <CommentPoster\n            postID={this.state.postID}\n            onUpdate={this.updateComments}\n            key={9991}\n            WPConfig={this.props.WPConfig}\n            comments={this.state.comments}\n          />\n        );\n        let comments = [];\n        parentComments.forEach((comment, index) => {\n          let parentID = comment.id;\n          let nestedComments = this.state.comments.filter(\n            comment => comment.parent === parentID\n          );\n          comments.push(\n            <Comment\n              comment={comment}\n              index={index}\n              key={index}\n              onUpdate={this.updateComments}\n              nestedComments={nestedComments}\n              allComments={this.state.comments}\n            />\n          );\n        });\n        render.push(\n          <div className=\"comments-container\" key={9998}>\n            {comments}\n          </div>\n        );\n      }\n    } else {\n      render.push(\n        <Helmet key=\"123653\">\n          <title>Håkon Underbakke - Articles</title>\n          <meta\n            name=\"description\"\n            content={\"Web development & design articles.\"}\n          />\n        </Helmet>\n      );\n    }\n    return (\n      <React.Fragment>\n        {!this.state.loaded && (\n          <main className=\"showLoading\">\n            <Loader />\n          </main>\n        )}\n        <main className={this.state.loaded ? \"loaded\" : \"loading\"}>\n          {render}\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Articles;\n"]},"metadata":{},"sourceType":"module"}