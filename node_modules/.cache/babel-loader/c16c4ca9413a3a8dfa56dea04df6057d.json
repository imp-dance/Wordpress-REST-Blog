{"ast":null,"code":"import _slicedToArray from \"/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/src/components/Comment.js\";\nimport React, { useState } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport CommentPoster from \"./CommentPoster\";\nimport WPConfig from \"../WordpressConfig\";\nimport \"../App.scss\";\n\nconst HtmlToReactParser = require(\"html-to-react\").Parser;\n\nexport const Comment = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isReplying = _useState2[0],\n        setReplying = _useState2[1];\n\n  const showReply = () => {\n    setReplying(!isReplying);\n  };\n\n  const reactParse = parse => {\n    let HTMLToReactParser = new HtmlToReactParser();\n    let reactElement = HTMLToReactParser.parse(parse);\n    return ReactDOMServer.renderToStaticMarkup(reactElement);\n  };\n\n  const parseDate = date => {\n    let y = date.substring(0, 4);\n    let m = date.substring(5, 7);\n    let d = date.substring(8, 10);\n    let h = date.substring(11, 13);\n    let min = date.substring(14, 16);\n    return `${h}:${min} ${d}/${m}/${y}`;\n  };\n\n  const commentWasPosted = newCommentState => {\n    if (props.onUpdate !== undefined) {\n      props.onUpdate(newCommentState);\n    }\n\n    setReplying(false);\n  };\n\n  let name = props.comment.author_name;\n  let body = reactParse(props.comment.content.rendered);\n  let date = parseDate(props.comment.date);\n  let img = props.comment.author_avatar_urls[48];\n  let nestedComments = props.nestedComments;\n  let nestedCommentsArray = [];\n\n  if (nestedComments.length >= 1) {\n    nestedComments.forEach((comment, index) => {\n      let allComments = props.allComments;\n      let replyID = comment.id;\n      let moreNestedComments = allComments.filter(comment => comment.parent === replyID);\n      nestedCommentsArray.push(React.createElement(Comment, {\n        key: index,\n        comment: comment,\n        index: index,\n        onUpdate: commentWasPosted,\n        nestedComments: moreNestedComments,\n        allComments: allComments,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }));\n    });\n  }\n\n  let commentClassName = props.comment.customStatus === \"pending\" ? \"comment pending\" : \"comment\";\n  return React.createElement(\"div\", {\n    className: commentClassName,\n    key: props.index,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"comment-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: img,\n    alt: \"Comment avatar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    className: \"comment-username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, props.comment.author === 1 && React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"\\u2605\"), name), React.createElement(\"em\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"#\", props.comment.id)), React.createElement(\"div\", {\n    className: \"comment-body\",\n    dangerouslySetInnerHTML: {\n      __html: body\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(\"i\", {\n    className: \"comment-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, props.comment.customStatus !== \"pending\" && React.createElement(\"button\", {\n    onClick: showReply,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, isReplying ? \"Cancel\" : \"Reply\"), date), isReplying && React.createElement(CommentPoster, {\n    replyTo: props.comment.id,\n    postID: props.comment.post,\n    onUpdate: commentWasPosted,\n    WPConfig: WPConfig,\n    comments: props.allComments,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), nestedComments.length >= 1 && React.createElement(\"div\", {\n    className: \"nestedComments\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, nestedCommentsArray));\n};\nexport default Comment;","map":{"version":3,"sources":["/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/src/components/Comment.js"],"names":["React","useState","ReactDOMServer","CommentPoster","WPConfig","HtmlToReactParser","require","Parser","Comment","props","isReplying","setReplying","showReply","reactParse","parse","HTMLToReactParser","reactElement","renderToStaticMarkup","parseDate","date","y","substring","m","d","h","min","commentWasPosted","newCommentState","onUpdate","undefined","name","comment","author_name","body","content","rendered","img","author_avatar_urls","nestedComments","nestedCommentsArray","length","forEach","index","allComments","replyID","id","moreNestedComments","filter","parent","push","commentClassName","customStatus","author","__html","post"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAO,aAAP;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,eAAD,CAAP,CAAyBC,MAAnD;;AAEA,OAAO,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA,oBACIR,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,QACvBS,UADuB;AAAA,QACXC,WADW;;AAE9B,QAAMC,SAAS,GAAG,MAAM;AACtBD,IAAAA,WAAW,CAAC,CAACD,UAAF,CAAX;AACD,GAFD;;AAGA,QAAMG,UAAU,GAAGC,KAAK,IAAI;AAC1B,QAAIC,iBAAiB,GAAG,IAAIV,iBAAJ,EAAxB;AACA,QAAIW,YAAY,GAAGD,iBAAiB,CAACD,KAAlB,CAAwBA,KAAxB,CAAnB;AACA,WAAOZ,cAAc,CAACe,oBAAf,CAAoCD,YAApC,CAAP;AACD,GAJD;;AAKA,QAAME,SAAS,GAAGC,IAAI,IAAI;AACxB,QAAIC,CAAC,GAAGD,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAR;AACA,QAAIC,CAAC,GAAGH,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAR;AACA,QAAIE,CAAC,GAAGJ,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkB,EAAlB,CAAR;AACA,QAAIG,CAAC,GAAGL,IAAI,CAACE,SAAL,CAAe,EAAf,EAAmB,EAAnB,CAAR;AACA,QAAII,GAAG,GAAGN,IAAI,CAACE,SAAL,CAAe,EAAf,EAAmB,EAAnB,CAAV;AACA,WAAQ,GAAEG,CAAE,IAAGC,GAAI,IAAGF,CAAE,IAAGD,CAAE,IAAGF,CAAE,EAAlC;AACD,GAPD;;AAQA,QAAMM,gBAAgB,GAAGC,eAAe,IAAI;AAC1C,QAAIlB,KAAK,CAACmB,QAAN,KAAmBC,SAAvB,EAAkC;AAChCpB,MAAAA,KAAK,CAACmB,QAAN,CAAeD,eAAf;AACD;;AACDhB,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GALD;;AAMA,MAAImB,IAAI,GAAGrB,KAAK,CAACsB,OAAN,CAAcC,WAAzB;AACA,MAAIC,IAAI,GAAGpB,UAAU,CAACJ,KAAK,CAACsB,OAAN,CAAcG,OAAd,CAAsBC,QAAvB,CAArB;AACA,MAAIhB,IAAI,GAAGD,SAAS,CAACT,KAAK,CAACsB,OAAN,CAAcZ,IAAf,CAApB;AACA,MAAIiB,GAAG,GAAG3B,KAAK,CAACsB,OAAN,CAAcM,kBAAd,CAAiC,EAAjC,CAAV;AACA,MAAIC,cAAc,GAAG7B,KAAK,CAAC6B,cAA3B;AACA,MAAIC,mBAAmB,GAAG,EAA1B;;AACA,MAAID,cAAc,CAACE,MAAf,IAAyB,CAA7B,EAAgC;AAC9BF,IAAAA,cAAc,CAACG,OAAf,CAAuB,CAACV,OAAD,EAAUW,KAAV,KAAoB;AACzC,UAAIC,WAAW,GAAGlC,KAAK,CAACkC,WAAxB;AACA,UAAIC,OAAO,GAAGb,OAAO,CAACc,EAAtB;AACA,UAAIC,kBAAkB,GAAGH,WAAW,CAACI,MAAZ,CACvBhB,OAAO,IAAIA,OAAO,CAACiB,MAAR,KAAmBJ,OADP,CAAzB;AAGAL,MAAAA,mBAAmB,CAACU,IAApB,CACE,oBAAC,OAAD;AACE,QAAA,GAAG,EAAEP,KADP;AAEE,QAAA,OAAO,EAAEX,OAFX;AAGE,QAAA,KAAK,EAAEW,KAHT;AAIE,QAAA,QAAQ,EAAEhB,gBAJZ;AAKE,QAAA,cAAc,EAAEoB,kBALlB;AAME,QAAA,WAAW,EAAEH,WANf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAUD,KAhBD;AAiBD;;AACD,MAAIO,gBAAgB,GAClBzC,KAAK,CAACsB,OAAN,CAAcoB,YAAd,KAA+B,SAA/B,GAA2C,iBAA3C,GAA+D,SADjE;AAEA,SACE;AAAK,IAAA,SAAS,EAAED,gBAAhB;AAAkC,IAAA,GAAG,EAAEzC,KAAK,CAACiC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEN,GAAV;AAAe,IAAA,GAAG,EAAC,gBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAQ,IAAA,SAAS,EAAC,kBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG3B,KAAK,CAACsB,OAAN,CAAcqB,MAAd,KAAyB,CAAzB,IAA8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADjC,EAEGtB,IAFH,CAFF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMrB,KAAK,CAACsB,OAAN,CAAcc,EAApB,CANF,CADF,EAUE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,uBAAuB,EAAE;AAAEQ,MAAAA,MAAM,EAAEpB;AAAV,KAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAcE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGxB,KAAK,CAACsB,OAAN,CAAcoB,YAAd,KAA+B,SAA/B,IACC;AAAQ,IAAA,OAAO,EAAEvC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BF,UAAU,GAAG,QAAH,GAAc,OAArD,CAFJ,EAIGS,IAJH,CAdF,EAoBGT,UAAU,IACT,oBAAC,aAAD;AACE,IAAA,OAAO,EAAED,KAAK,CAACsB,OAAN,CAAcc,EADzB;AAEE,IAAA,MAAM,EAAEpC,KAAK,CAACsB,OAAN,CAAcuB,IAFxB;AAGE,IAAA,QAAQ,EAAE5B,gBAHZ;AAIE,IAAA,QAAQ,EAAEtB,QAJZ;AAKE,IAAA,QAAQ,EAAEK,KAAK,CAACkC,WALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,EA6BGL,cAAc,CAACE,MAAf,IAAyB,CAAzB,IACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCD,mBAAjC,CA9BJ,CADF;AAmCD,CAtFM;AAwFP,eAAe/B,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport CommentPoster from \"./CommentPoster\";\nimport WPConfig from \"../WordpressConfig\";\nimport \"../App.scss\";\nconst HtmlToReactParser = require(\"html-to-react\").Parser;\n\nexport const Comment = props => {\n  const [isReplying, setReplying] = useState(false);\n  const showReply = () => {\n    setReplying(!isReplying);\n  };\n  const reactParse = parse => {\n    let HTMLToReactParser = new HtmlToReactParser();\n    let reactElement = HTMLToReactParser.parse(parse);\n    return ReactDOMServer.renderToStaticMarkup(reactElement);\n  };\n  const parseDate = date => {\n    let y = date.substring(0, 4);\n    let m = date.substring(5, 7);\n    let d = date.substring(8, 10);\n    let h = date.substring(11, 13);\n    let min = date.substring(14, 16);\n    return `${h}:${min} ${d}/${m}/${y}`;\n  };\n  const commentWasPosted = newCommentState => {\n    if (props.onUpdate !== undefined) {\n      props.onUpdate(newCommentState);\n    }\n    setReplying(false);\n  };\n  let name = props.comment.author_name;\n  let body = reactParse(props.comment.content.rendered);\n  let date = parseDate(props.comment.date);\n  let img = props.comment.author_avatar_urls[48];\n  let nestedComments = props.nestedComments;\n  let nestedCommentsArray = [];\n  if (nestedComments.length >= 1) {\n    nestedComments.forEach((comment, index) => {\n      let allComments = props.allComments;\n      let replyID = comment.id;\n      let moreNestedComments = allComments.filter(\n        comment => comment.parent === replyID\n      );\n      nestedCommentsArray.push(\n        <Comment\n          key={index}\n          comment={comment}\n          index={index}\n          onUpdate={commentWasPosted}\n          nestedComments={moreNestedComments}\n          allComments={allComments}\n        />\n      );\n    });\n  }\n  let commentClassName =\n    props.comment.customStatus === \"pending\" ? \"comment pending\" : \"comment\";\n  return (\n    <div className={commentClassName} key={props.index}>\n      <div className=\"comment-header\">\n        <img src={img} alt=\"Comment avatar\" />\n        <strong className=\"comment-username\">\n          {props.comment.author === 1 && <span>★</span>}\n          {name}\n        </strong>\n        <em>#{props.comment.id}</em>\n      </div>\n\n      <div\n        className=\"comment-body\"\n        dangerouslySetInnerHTML={{ __html: body }}\n      />\n      <i className=\"comment-date\">\n        {props.comment.customStatus !== \"pending\" && (\n          <button onClick={showReply}>{isReplying ? \"Cancel\" : \"Reply\"}</button>\n        )}\n        {date}\n      </i>\n      {isReplying && (\n        <CommentPoster\n          replyTo={props.comment.id}\n          postID={props.comment.post}\n          onUpdate={commentWasPosted}\n          WPConfig={WPConfig}\n          comments={props.allComments}\n        />\n      )}\n      {nestedComments.length >= 1 && (\n        <div className=\"nestedComments\">{nestedCommentsArray}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}