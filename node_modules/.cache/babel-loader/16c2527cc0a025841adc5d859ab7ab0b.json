{"ast":null,"code":"var _jsxFileName = \"/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/src/components/CommentPoster.js\";\nimport React from \"react\";\nimport \"../App.scss\";\nimport axios from \"axios\";\n\nclass Header extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      errorMessage: \"\",\n      showError: false,\n      commentEmail: \"\",\n      commentName: \"\",\n      commentContent: \"\"\n    };\n\n    this.onChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.validateEmail = email => {\n      // eslint-disable-next-line\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      return re.test(String(email).toLowerCase());\n    };\n\n    this.postNewComment = () => {\n      this.setState({\n        showError: false\n      });\n      let _this$state = this.state,\n          commentEmail = _this$state.commentEmail,\n          commentName = _this$state.commentName,\n          commentContent = _this$state.commentContent;\n      let data = {\n        author_name: commentName,\n        author_email: commentEmail,\n        content: commentContent,\n        post: this.props.postID\n      };\n\n      if (this.props.replyTo !== null) {\n        data.parent = this.props.replyTo;\n      }\n\n      let config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }; // Validate user input\n\n      let errors = 0;\n      let errorMessage = \"\";\n\n      if (!this.validateEmail(commentEmail)) {\n        errors++;\n        errorMessage = \"Please enter a valid email address\";\n      }\n\n      if (commentName.length < 3) {\n        errors++;\n        errorMessage = \"Name needs to be atleast three characters\";\n      }\n\n      if (commentContent.length < 10) {\n        errors++;\n        errorMessage = \"Comment needs to be atleast 10 characters\";\n      }\n\n      if (errors === 0) {\n        axios.post(`${this.props.WPConfig.siteURL}wp-json/wp/v2/comments`, data, config).then(res => res.data).then(data => {\n          let currentCommentState = this.props.comments;\n          let newCommentState = data;\n          newCommentState.customStatus = \"pending\";\n          newCommentState = currentCommentState.unshift(newCommentState);\n          this.setState({\n            comments: newCommentState,\n            commentEmail: \"\",\n            commentName: \"\",\n            commentContent: \"\"\n          });\n\n          if (this.props.onUpdate !== null) {\n            this.props.onUpdate(newCommentState);\n          }\n        });\n      } else {\n        this.setState({\n          showError: true,\n          errorMessage\n        });\n      }\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"comment-poster\",\n      key: 9996,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, this.state.showError && React.createElement(\"div\", {\n      className: \"comment-poster-error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.errorMessage), React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      valign: \"top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Your email: \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"email\",\n      name: \"commentEmail\",\n      onChange: this.onChange,\n      value: this.state.commentEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Your name: \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"commentName\",\n      onChange: this.onChange,\n      value: this.state.commentName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Comment: \"), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      name: \"commentContent\",\n      onChange: this.onChange,\n      value: this.state.commentContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.postNewComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Submit comment\"))))));\n  }\n\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/hakonunderbakke/Documents/GitHub/react-app-testing/Wordpress-REST-Blog/src/components/CommentPoster.js"],"names":["React","axios","Header","Component","state","errorMessage","showError","commentEmail","commentName","commentContent","onChange","event","setState","target","name","value","validateEmail","email","re","test","String","toLowerCase","postNewComment","data","author_name","author_email","content","post","props","postID","replyTo","parent","config","headers","errors","length","WPConfig","siteURL","then","res","currentCommentState","comments","newCommentState","customStatus","unshift","onUpdate","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../App.scss\";\nimport axios from \"axios\";\nclass Header extends React.Component {\n  componentDidMount() {}\n  state = {\n    errorMessage: \"\",\n    showError: false,\n    commentEmail: \"\",\n    commentName: \"\",\n    commentContent: \"\"\n  };\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  validateEmail = email => {\n    // eslint-disable-next-line\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n  postNewComment = () => {\n    this.setState({ showError: false });\n    let { commentEmail, commentName, commentContent } = this.state;\n    let data = {\n      author_name: commentName,\n      author_email: commentEmail,\n      content: commentContent,\n      post: this.props.postID\n    };\n    if (this.props.replyTo !== null) {\n      data.parent = this.props.replyTo;\n    }\n    let config = {\n      headers: { \"Content-Type\": \"application/json\" }\n    };\n    // Validate user input\n    let errors = 0;\n    let errorMessage = \"\";\n    if (!this.validateEmail(commentEmail)) {\n      errors++;\n      errorMessage = \"Please enter a valid email address\";\n    }\n    if (commentName.length < 3) {\n      errors++;\n      errorMessage = \"Name needs to be atleast three characters\";\n    }\n    if (commentContent.length < 10) {\n      errors++;\n      errorMessage = \"Comment needs to be atleast 10 characters\";\n    }\n    if (errors === 0) {\n      axios\n        .post(\n          `${this.props.WPConfig.siteURL}wp-json/wp/v2/comments`,\n          data,\n          config\n        )\n        .then(res => res.data)\n        .then(data => {\n          let currentCommentState = this.props.comments;\n          let newCommentState = data;\n          newCommentState.customStatus = \"pending\";\n          newCommentState = currentCommentState.unshift(newCommentState);\n          this.setState({\n            comments: newCommentState,\n            commentEmail: \"\",\n            commentName: \"\",\n            commentContent: \"\"\n          });\n          if (this.props.onUpdate !== null) {\n            this.props.onUpdate(newCommentState);\n          }\n        });\n    } else {\n      this.setState({ showError: true, errorMessage });\n    }\n  };\n  render() {\n    return (\n      <div className=\"comment-poster\" key={9996}>\n        {this.state.showError && (\n          <div className=\"comment-poster-error\">{this.state.errorMessage}</div>\n        )}\n        <table>\n          <tbody valign=\"top\">\n            <tr>\n              <td>Your email: </td>\n              <td>\n                <input\n                  type=\"email\"\n                  name=\"commentEmail\"\n                  onChange={this.onChange}\n                  value={this.state.commentEmail}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Your name: </td>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"commentName\"\n                  onChange={this.onChange}\n                  value={this.state.commentName}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Comment: </td>\n              <td>\n                <textarea\n                  name=\"commentContent\"\n                  onChange={this.onChange}\n                  value={this.state.commentContent}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td></td>\n              <td>\n                <button onClick={this.postNewComment}>Submit comment</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}