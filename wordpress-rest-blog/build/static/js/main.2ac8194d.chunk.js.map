{"version":3,"sources":["WordpressConfig.js","components/CommentPoster.js","components/Comment.js","components/Articles.js","pages/Index.js","pages/Post.js","components/Header.js","components/ScrollToTopRoute.js","App.js","serviceWorker.js","index.js"],"names":["WPConfig","siteURL","baseName","Header","state","errorMessage","showError","commentEmail","commentName","commentContent","onChange","event","setState","target","name","value","validateEmail","email","test","String","toLowerCase","postNewComment","data","author_name","author_email","content","post","props","postID","replyTo","parent","errors","length","axios","headers","then","res","currentCommentState","comments","newCommentState","customStatus","unshift","onUpdate","className","key","this","valign","type","onClick","React","Component","HtmlToReactParser","require","Parser","Comment","useState","isReplying","setReplying","commentWasPosted","undefined","comment","body","parse","reactElement","ReactDOMServer","renderToStaticMarkup","reactParse","rendered","date","y","substring","m","d","h","min","parseDate","img","author_avatar_urls","nestedComments","nestedCommentsArray","forEach","index","allComments","replyID","id","moreNestedComments","filter","push","commentClassName","src","alt","author","dangerouslySetInnerHTML","__html","CommentPoster","Articles","blogPosts","title","excerpt","categories","48","sortArticles","renderComments","commentReply","goToArticle","window","location","href","parentElement","getAttribute","categoryID","scrollToTop","scrollTo","document","scrollTop","replace","updateComments","newComments","goToMusic","goToCV","open","goToContact","ignoreAction","preventDefault","goHome","get","loaded","render","categoryItems","category","data-id","data-categoryid","parseInt","to","blogPost","includes","metaDescription","slice","Helmet","parentComments","url","FacebookShareButton","RedditShareButton","LinkedinShareButton","TwitterShareButton","EmailShareButton","parentID","Fragment","Index","Post","match","params","siteTitle","siteDescription","siteInfo","description","WordpressConfig","ScrollToTopRoute","prevProps","path","pathname","component","rest","withRouter","App","basename","exact","ScrollToTop","children","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2ac8194d.chunk.js","sourcesContent":["const WPConfig = {\n  siteURL: \"https://impedans.me/web/\",\n  baseName: \"/blog/\"\n};\nexport default WPConfig;\n","import React from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nclass Header extends React.Component {\n  componentDidMount() {}\n  state = {\n    errorMessage: \"\",\n    showError: false,\n    commentEmail: \"\",\n    commentName: \"\",\n    commentContent: \"\"\n  };\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  validateEmail = email => {\n    // eslint-disable-next-line\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n  postNewComment = () => {\n    this.setState({ showError: false });\n    let { commentEmail, commentName, commentContent } = this.state;\n    let data = {\n      author_name: commentName,\n      author_email: commentEmail,\n      content: commentContent,\n      post: this.props.postID\n    };\n    if (this.props.replyTo !== null) {\n      data.parent = this.props.replyTo;\n    }\n    let config = {\n      headers: { \"Content-Type\": \"application/json\" }\n    };\n    // Validate user input\n    let errors = 0;\n    let errorMessage = \"\";\n    if (!this.validateEmail(commentEmail)) {\n      errors++;\n      errorMessage = \"Please enter a valid email address\";\n    }\n    if (commentName.length < 3) {\n      errors++;\n      errorMessage = \"Name needs to be atleast three characters\";\n    }\n    if (commentContent.length < 10) {\n      errors++;\n      errorMessage = \"Comment needs to be atleast 10 characters\";\n    }\n    if (errors === 0) {\n      axios\n        .post(\n          `${this.props.WPConfig.siteURL}wp-json/wp/v2/comments`,\n          data,\n          config\n        )\n        .then(res => res.data)\n        .then(data => {\n          let currentCommentState = this.props.comments;\n          let newCommentState = data;\n          newCommentState.customStatus = \"pending\";\n          newCommentState = currentCommentState.unshift(newCommentState);\n          this.setState({\n            comments: newCommentState,\n            commentEmail: \"\",\n            commentName: \"\",\n            commentContent: \"\"\n          });\n          if (this.props.onUpdate !== null) {\n            this.props.onUpdate(newCommentState);\n          }\n        });\n    } else {\n      this.setState({ showError: true, errorMessage });\n    }\n  };\n  render() {\n    return (\n      <div className=\"comment-poster\" key={9996}>\n        {this.state.showError && (\n          <div className=\"comment-poster-error\">{this.state.errorMessage}</div>\n        )}\n        <table>\n          <tbody valign=\"top\">\n            <tr>\n              <td>Your email: </td>\n              <td>\n                <input\n                  type=\"email\"\n                  name=\"commentEmail\"\n                  onChange={this.onChange}\n                  value={this.state.commentEmail}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Your name: </td>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"commentName\"\n                  onChange={this.onChange}\n                  value={this.state.commentName}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Comment: </td>\n              <td>\n                <textarea\n                  name=\"commentContent\"\n                  onChange={this.onChange}\n                  value={this.state.commentContent}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td></td>\n              <td>\n                <button onClick={this.postNewComment}>Submit comment</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport CommentPoster from \"./CommentPoster\";\nimport WPConfig from \"../WordpressConfig\";\nimport \"../App.css\";\nconst HtmlToReactParser = require(\"html-to-react\").Parser;\n\nexport const Comment = props => {\n  const [isReplying, setReplying] = useState(false);\n  const showReply = () => {\n    setReplying(!isReplying);\n  };\n  const reactParse = parse => {\n    let HTMLToReactParser = new HtmlToReactParser();\n    let reactElement = HTMLToReactParser.parse(parse);\n    return ReactDOMServer.renderToStaticMarkup(reactElement);\n  };\n  const parseDate = date => {\n    let y = date.substring(0, 4);\n    let m = date.substring(5, 7);\n    let d = date.substring(8, 10);\n    let h = date.substring(11, 13);\n    let min = date.substring(14, 16);\n    return `${h}:${min} ${d}/${m}/${y}`;\n  };\n  const commentWasPosted = newCommentState => {\n    if (props.onUpdate !== undefined) {\n      props.onUpdate(newCommentState);\n    }\n    setReplying(false);\n  };\n  let name = props.comment.author_name;\n  let body = reactParse(props.comment.content.rendered);\n  let date = parseDate(props.comment.date);\n  let img = props.comment.author_avatar_urls[48];\n  let nestedComments = props.nestedComments;\n  let nestedCommentsArray = [];\n  if (nestedComments.length >= 1) {\n    nestedComments.forEach((comment, index) => {\n      let allComments = props.allComments;\n      let replyID = comment.id;\n      let moreNestedComments = allComments.filter(\n        comment => comment.parent === replyID\n      );\n      nestedCommentsArray.push(\n        <Comment\n          key={index}\n          comment={comment}\n          index={index}\n          onUpdate={commentWasPosted}\n          nestedComments={moreNestedComments}\n          allComments={allComments}\n        />\n      );\n    });\n  }\n  let commentClassName =\n    props.comment.customStatus === \"pending\" ? \"comment pending\" : \"comment\";\n  return (\n    <div className={commentClassName} key={props.index}>\n      <div className=\"comment-header\">\n        <img src={img} alt=\"Comment avatar\" />\n        <strong className=\"comment-username\">\n          {props.comment.author === 1 && <span>★</span>}\n          {name}\n        </strong>\n        <em>#{props.comment.id}</em>\n      </div>\n\n      <div\n        className=\"comment-body\"\n        dangerouslySetInnerHTML={{ __html: body }}\n      />\n      <i className=\"comment-date\">\n        {props.comment.customStatus !== \"pending\" && (\n          <button onClick={showReply}>{isReplying ? \"Cancel\" : \"Reply\"}</button>\n        )}\n        {date}\n      </i>\n      {isReplying && (\n        <CommentPoster\n          replyTo={props.comment.id}\n          postID={props.comment.post}\n          onUpdate={commentWasPosted}\n          WPConfig={WPConfig}\n          comments={props.allComments}\n        />\n      )}\n      {nestedComments.length >= 1 && (\n        <div className=\"nestedComments\">{nestedCommentsArray}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Comment;\n","import React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport Comment from \"./Comment\";\nimport CommentPoster from \"./CommentPoster\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  FacebookShareButton,\n  RedditShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  EmailShareButton\n} from \"react-share\";\nconst HtmlToReactParser = require(\"html-to-react\").Parser;\n\nclass Articles extends React.Component {\n  state = {\n    blogPosts: [\n      {\n        id: 0,\n        title: { rendered: \"\" },\n        excerpt: { rendered: \"\" },\n        content: { rendered: \"\" },\n        categories: []\n      }\n    ],\n    comments: [\n      {\n        author_name: \"\",\n        content: { rendered: \"\" },\n        author_avatar_urls: { 48: \"\" },\n        date: \"\"\n      }\n    ],\n    categories: [\n      {\n        name: \"\",\n        id: null\n      }\n    ],\n    sortArticles: null,\n    postID: this.props.postID || false,\n    renderComments: false,\n    commentEmail: \"\",\n    commentName: \"\",\n    commentContent: \"\",\n    commentReply: null\n  };\n  componentDidMount() {\n    if (this.state.postID === false) {\n      axios\n        .get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/posts`)\n        .then(res => res.data)\n        .then(blogPosts => {\n          this.setState({\n            blogPosts: blogPosts,\n            loaded: true\n          });\n        });\n      axios\n        .get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/categories`)\n        .then(res => res.data)\n        .then(categories => {\n          this.setState({\n            categories: categories\n          });\n        });\n      this.scrollToTop();\n    } else {\n      axios\n        .get(\n          `${this.props.WPConfig.siteURL}wp-json/wp/v2/posts/?include[]=${this.state.postID}`\n        )\n        .then(res => res.data)\n        .then(blogPosts => {\n          this.setState({\n            blogPosts: blogPosts,\n            loaded: true\n          });\n        });\n      axios\n        .get(\n          `${this.props.WPConfig.siteURL}wp-json/wp/v2/comments/?post=${this.state.postID}`\n        )\n        .then(res => res.data)\n        .then(comments => {\n          this.setState({\n            comments: comments\n          });\n        });\n      this.scrollToTop();\n    }\n  }\n  goToArticle = event => {\n    window.location.href = `${\n      this.props.WPConfig.baseName\n    }post/${event.target.parentElement.getAttribute(\"data-id\")}`;\n  };\n  sortArticles = event => {\n    let categoryID = event.target.getAttribute(\"data-categoryid\");\n    this.setState({ sortArticles: categoryID });\n    this.scrollToTop();\n  };\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n  };\n  reactParse = parse => {\n    let HTMLToReactParser = new HtmlToReactParser();\n    let reactElement = HTMLToReactParser.parse(parse);\n    let string = ReactDOMServer.renderToStaticMarkup(reactElement);\n    return string.replace(\"<code>\", \"<code class='markUpBaby'>\");\n  };\n  parseDate = date => {\n    let y = date.substring(0, 4);\n    let m = date.substring(5, 7);\n    let d = date.substring(8, 10);\n    let h = date.substring(11, 13);\n    let min = date.substring(14, 16);\n    return `${h}:${min} ${d}/${m}/${y}`;\n  };\n  updateComments = newCommentState => {\n    this.setState({ newComments: newCommentState });\n  };\n  goToMusic = () => {\n    window.location.href = \"/blog/post/128\";\n  };\n  goToCV = () => {\n    window.open(\"https://haakon.underbakke.net/cv\", \"_blank\");\n  };\n  goToContact = () => {\n    window.location.href = \"https://impedans.me/web/contact-me/\";\n  };\n  ignoreAction = event => {\n    event.preventDefault();\n  };\n  goHome = () => {\n    window.location.href = \"/\";\n  };\n  render() {\n    let render = [];\n    let categoryItems = [];\n    this.state.categories.forEach((category, index) => {\n      if (category.id !== 1) {\n        categoryItems.push(\n          <li key={\"art\" + 1888 + index} data-id={category.id}>\n            <button\n              onClick={this.sortArticles}\n              data-categoryid={category.id}\n              className={\n                this.state.sortArticles === null ||\n                parseInt(this.state.sortArticles) === parseInt(category.id)\n                  ? \"white\"\n                  : \"gray\"\n              }\n            >\n              {category.name}\n            </button>\n          </li>\n        );\n      }\n    });\n    if (this.state.postID !== false) {\n      categoryItems.push(\n        <li key={\"fart\" + 1923}>\n          <button onClick={this.goHome}>&#8249; Articles & Projects</button>\n        </li>\n      );\n    }\n    categoryItems.push(\n      <li key={\"bart\" + 1923} className=\"seperator\">\n        |\n      </li>\n    );\n    render.push(\n      <nav key={\"part\" + 9991}>\n        <ul>\n          {categoryItems}\n          <li>\n            <Link to=\"/post/128\">\n              <button onClick={this.state.postID !== false && this.goToMusic}>\n                Music\n              </button>\n            </Link>\n          </li>\n          <li>\n            <button onClick={this.goToContact}>Contact</button>\n          </li>\n          <li>\n            <button onClick={this.goToCV}>CV</button>\n          </li>\n        </ul>\n      </nav>\n    );\n    this.state.blogPosts.forEach((blogPost, index) => {\n      if (\n        this.state.sortArticles === null ||\n        blogPost.categories.includes(parseInt(this.state.sortArticles)) ||\n        blogPost.categories === parseInt(this.state.sortArticles)\n      ) {\n        let title = this.reactParse(blogPost.title.rendered);\n        let body =\n          this.state.postID === false\n            ? this.reactParse(blogPost.excerpt.rendered)\n            : this.reactParse(blogPost.content.rendered);\n        if (this.state.postID === false) {\n          body = body.substring(0, body.length - 9) + \"...</p>\";\n        }\n        let className = this.state.postID === false ? \"collapsed\" : \"open\";\n        /*if (index === 0 && this.state.sortArticles === null) {\n          className = \"open\"; // Latest article should be open on index\n          body = this.reactParse(blogPost.content.rendered);\n        }*/\n        if (\n          (this.state.postID === false && !blogPost.categories.includes(1)) ||\n          this.state.postID !== false\n        ) {\n          render.push(\n            <article key={index} className={className} data-id={blogPost.id}>\n              <Link\n                to={\"/post/\" + blogPost.id}\n                data-id={blogPost.id}\n                className=\"articleLink\"\n              >\n                <h3\n                  data-id={blogPost.id}\n                  dangerouslySetInnerHTML={{\n                    __html: title\n                  }}\n                ></h3>\n              </Link>\n              {this.state.postID === false ? (\n                <Link\n                  to={\"/post/\" + blogPost.id}\n                  data-id={blogPost.id}\n                  className=\"articleBodyLink\"\n                >\n                  <div\n                    className=\"body\"\n                    data-id={blogPost.id}\n                    dangerouslySetInnerHTML={{\n                      __html: body\n                    }}\n                  ></div>\n                </Link>\n              ) : (\n                <div\n                  className=\"body\"\n                  onClick={\n                    this.state.postID === false\n                      ? this.goToArticle\n                      : this.ignoreAction\n                  }\n                  data-id={blogPost.id}\n                  dangerouslySetInnerHTML={{\n                    __html: body\n                  }}\n                ></div>\n              )}\n            </article>\n          );\n        }\n      }\n    });\n    if (this.state.postID !== false) {\n      // A specific post is open\n      if (this.state.blogPosts[0].title.rendered !== \"\") {\n        // update meta-data\n        /* document.title =\n          this.reactParse(this.state.blogPosts[0].title.rendered) +\n          \" - Håkon Underbakke\";\n        let newMetaDescription = this.reactParse(\n          this.state.blogPosts[0].excerpt.rendered\n        );\n        newMetaDescription = newMetaDescription.substring(3);\n        newMetaDescription = newMetaDescription.slice(0, -5);\n        document\n          .querySelector('meta[name=\"description\"]')\n          .setAttribute(\"content\", newMetaDescription); */\n        let metaDescription = this.reactParse(\n          this.state.blogPosts[0].excerpt.rendered\n        );\n        metaDescription = metaDescription.substring(3);\n        metaDescription = metaDescription.slice(0, -5);\n        let title = this.reactParse(this.state.blogPosts[0].title.rendered);\n        render.push(\n          <Helmet key=\"123653\">\n            <title>{title}</title>\n            <meta name=\"description\" content={metaDescription} />\n          </Helmet>\n        );\n      }\n      let parentComments = this.state.comments.filter(\n        comment => comment.parent === 0\n      );\n      let url = window.location.href;\n      render.push(<h5 key={\"aaart\" + 9994}>Share on...</h5>);\n      render.push(\n        <div className=\"social\" key={\"arts\" + 9993}>\n          <FacebookShareButton url={url}>Facebook</FacebookShareButton>\n          <RedditShareButton url={url}>Reddit</RedditShareButton>\n          <LinkedinShareButton url={url}>Linkedin</LinkedinShareButton>\n          <TwitterShareButton url={url}>Twitter</TwitterShareButton>\n          <EmailShareButton url={url}>Email</EmailShareButton>\n        </div>\n      );\n      if (!this.state.blogPosts[0].categories.includes(1)) {\n        if (this.state.comments.length === 1) {\n          render.push(<h4 key={\"bbbbart\" + 9999}>1 Comment</h4>);\n        } else if (this.state.comments.length === 0) {\n          render.push(\n            <h4 key={\"bbbart\" + 9999}>Be the first to leave a comment</h4>\n          );\n        } else {\n          render.push(\n            <h4 key={\"bbart\" + 9999}>{this.state.comments.length} Comments</h4>\n          );\n        }\n        render.push(\n          <CommentPoster\n            postID={this.state.postID}\n            onUpdate={this.updateComments}\n            key={9991}\n            WPConfig={this.props.WPConfig}\n            comments={this.state.comments}\n          />\n        );\n        let comments = [];\n        parentComments.forEach((comment, index) => {\n          let parentID = comment.id;\n          let nestedComments = this.state.comments.filter(\n            comment => comment.parent === parentID\n          );\n          comments.push(\n            <Comment\n              comment={comment}\n              index={index}\n              key={index}\n              onUpdate={this.updateComments}\n              nestedComments={nestedComments}\n              allComments={this.state.comments}\n            />\n          );\n        });\n        render.push(\n          <div className=\"comments-container\" key={9998}>\n            {comments}\n          </div>\n        );\n      }\n    }\n    return (\n      <React.Fragment>\n        {!this.state.loaded && <main className=\"showLoading\">Loading...</main>}\n        <main className={this.state.loaded ? \"loaded\" : \"loading\"}>\n          {render}\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Articles;\n","import React from \"react\";\nimport WPConfig from \"../WordpressConfig\";\nimport Articles from \"../components/Articles\";\nimport \"../App.css\";\n\nfunction Index() {\n  return (\n    <React.Fragment>\n      <Articles WPConfig={WPConfig}></Articles>\n    </React.Fragment>\n  );\n}\n\nexport default Index;\n","import React from \"react\";\nimport WPConfig from \"../WordpressConfig\";\nimport Articles from \"../components/Articles\";\nimport \"../App.css\";\n\nclass Post extends React.Component {\n  state = {\n    postID: this.props.match.params.postID || null\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Articles WPConfig={WPConfig} postID={this.state.postID}></Articles>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Post;\n","import React from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport WordpressConfig from \"../WordpressConfig\";\nclass Header extends React.Component {\n  componentDidMount() {\n    axios\n      .get(`${this.props.WPConfig.siteURL}wp-json/`)\n      .then(res => res.data)\n      .then(siteInfo => {\n        this.setState({\n          siteTitle: siteInfo.name,\n          siteDescription: siteInfo.description\n        });\n      });\n  }\n  state = {\n    siteTitle: \"Loading...\",\n    siteDescription: \"...\"\n  };\n  render() {\n    return (\n      <header\n        className={this.state.siteTitle === \"Loading...\" ? \"loading\" : \"loaded\"}\n      >\n        <Link to={WordpressConfig.baseName}>\n          <h1>{this.state.siteTitle}</h1>\n        </Link>\n        <p>{this.state.siteDescription}</p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\n\nclass ScrollToTopRoute extends Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.path === this.props.location.pathname &&\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const { component: Component, ...rest } = this.props;\n\n    return <Route {...rest} render={props => <Component {...props} />} />;\n  }\n}\n\nexport default withRouter(ScrollToTopRoute);\n","import React from \"react\";\nimport Index from \"./pages/Index\";\nimport Post from \"./pages/Post\";\nimport Header from \"./components/Header\";\nimport ScrollToTopRoute from \"./components/ScrollToTopRoute\";\nimport WPConfig from \"./WordpressConfig\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <Router\n            basename={WPConfig.baseName}\n            onUpdate={() => window.scrollTo(0, 0)}\n          >\n            <Header WPConfig={WPConfig}></Header>\n            <div className=\"minHeight\">\n              <ScrollToTop>\n                <Switch>\n                  <ScrollToTopRoute path=\"/post/:postID\" component={Post} />\n                  <Route path=\"/\" exact={true} component={Index} />\n                  <Route component={Index} />\n                </Switch>\n              </ScrollToTop>\n            </div>\n          </Router>\n        </div>\n        <footer>\n          {\n            //eslint-disable-next-line\n            <a href=\"#\">Back to top</a>\n          }\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}