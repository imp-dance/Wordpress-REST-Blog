{"version":3,"sources":["WordpressConfig.js","components/CommentPoster.js","components/Comment.js","components/Articles.js","pages/Index.js","pages/Post.js","components/Header.js","components/ScrollToTopRoute.js","App.js","serviceWorker.js","index.js"],"names":["WPConfig","siteURL","baseName","Header","state","errorMessage","showError","commentEmail","commentName","commentContent","onChange","event","setState","target","name","value","validateEmail","email","test","String","toLowerCase","postNewComment","data","author_name","author_email","content","post","props","postID","replyTo","parent","errors","length","axios","headers","then","res","currentCommentState","comments","newCommentState","customStatus","unshift","onUpdate","className","key","this","valign","type","onClick","React","Component","HtmlToReactParser","require","Parser","Comment","isReplying","showReply","reactParse","parse","reactElement","ReactDOMServer","renderToStaticMarkup","parseDate","date","y","substring","m","d","h","min","commentWasPosted","undefined","comment","body","rendered","img","author_avatar_urls","nestedComments","nestedCommentsArray","forEach","index","allComments","replyID","id","moreNestedComments","filter","push","commentClassName","src","alt","author","dangerouslySetInnerHTML","__html","CommentPoster","Articles","blogPosts","title","excerpt","categories","48","sortArticles","renderComments","commentReply","goToArticle","window","location","href","parentElement","getAttribute","categoryID","scrollToTop","scrollTo","document","scrollTop","replace","updateComments","newComments","goToMusic","open","goToCV","goToContact","ignoreAction","preventDefault","goHome","get","loaded","render","categoryItems","category","data-id","data-categoryid","blogPost","includes","parseInt","to","metaDescription","slice","Helmet","parentComments","url","FacebookShareButton","RedditShareButton","LinkedinShareButton","TwitterShareButton","EmailShareButton","parentID","Fragment","Index","Post","match","params","siteTitle","siteDescription","siteInfo","description","WordpressConfig","ScrollToTopRoute","prevProps","path","pathname","component","rest","withRouter","App","basename","exact","ScrollToTop","children","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a7368cfb.chunk.js","sourcesContent":["const WPConfig = {\n  siteURL: \"https://impedans.me/web/\",\n  baseName: \"/blog/\"\n};\nexport default WPConfig;\n","import React from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nclass Header extends React.Component {\n  componentDidMount() {}\n  state = {\n    errorMessage: \"\",\n    showError: false,\n    commentEmail: \"\",\n    commentName: \"\",\n    commentContent: \"\"\n  };\n  onChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n  validateEmail = email => {\n    // eslint-disable-next-line\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  };\n  postNewComment = () => {\n    this.setState({ showError: false });\n    let { commentEmail, commentName, commentContent } = this.state;\n    let data = {\n      author_name: commentName,\n      author_email: commentEmail,\n      content: commentContent,\n      post: this.props.postID\n    };\n    if (this.props.replyTo !== null) {\n      data.parent = this.props.replyTo;\n    }\n    let config = {\n      headers: { \"Content-Type\": \"application/json\" }\n    };\n    // Validate user input\n    let errors = 0;\n    let errorMessage = \"\";\n    if (!this.validateEmail(commentEmail)) {\n      errors++;\n      errorMessage = \"Please enter a valid email address\";\n    }\n    if (commentName.length < 3) {\n      errors++;\n      errorMessage = \"Name needs to be atleast three characters\";\n    }\n    if (commentContent.length < 10) {\n      errors++;\n      errorMessage = \"Comment needs to be atleast 10 characters\";\n    }\n    if (errors === 0) {\n      axios\n        .post(\n          `${this.props.WPConfig.siteURL}wp-json/wp/v2/comments`,\n          data,\n          config\n        )\n        .then(res => res.data)\n        .then(data => {\n          let currentCommentState = this.props.comments;\n          let newCommentState = data;\n          newCommentState.customStatus = \"pending\";\n          newCommentState = currentCommentState.unshift(newCommentState);\n          this.setState({\n            comments: newCommentState,\n            commentEmail: \"\",\n            commentName: \"\",\n            commentContent: \"\"\n          });\n          if (this.props.onUpdate !== null) {\n            this.props.onUpdate(newCommentState);\n          }\n        });\n    } else {\n      this.setState({ showError: true, errorMessage });\n    }\n  };\n  render() {\n    return (\n      <div className=\"comment-poster\" key={9996}>\n        {this.state.showError && (\n          <div className=\"comment-poster-error\">{this.state.errorMessage}</div>\n        )}\n        <table>\n          <tbody valign=\"top\">\n            <tr>\n              <td>Your email: </td>\n              <td>\n                <input\n                  type=\"email\"\n                  name=\"commentEmail\"\n                  onChange={this.onChange}\n                  value={this.state.commentEmail}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Your name: </td>\n              <td>\n                <input\n                  type=\"text\"\n                  name=\"commentName\"\n                  onChange={this.onChange}\n                  value={this.state.commentName}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Comment: </td>\n              <td>\n                <textarea\n                  name=\"commentContent\"\n                  onChange={this.onChange}\n                  value={this.state.commentContent}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td></td>\n              <td>\n                <button onClick={this.postNewComment}>Submit comment</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport CommentPoster from \"./CommentPoster\";\nimport WPConfig from \"../WordpressConfig\";\nimport \"../App.css\";\nconst HtmlToReactParser = require(\"html-to-react\").Parser;\n\nclass Comment extends React.Component {\n  state = {\n    isReplying: false\n  };\n  showReply = () => {\n    this.setState({ isReplying: !this.state.isReplying });\n  };\n  reactParse = parse => {\n    let HTMLToReactParser = new HtmlToReactParser();\n    let reactElement = HTMLToReactParser.parse(parse);\n    return ReactDOMServer.renderToStaticMarkup(reactElement);\n  };\n  parseDate = date => {\n    let y = date.substring(0, 4);\n    let m = date.substring(5, 7);\n    let d = date.substring(8, 10);\n    let h = date.substring(11, 13);\n    let min = date.substring(14, 16);\n    return `${h}:${min} ${d}/${m}/${y}`;\n  };\n  commentWasPosted = newCommentState => {\n    if (this.props.onUpdate !== undefined) {\n      this.props.onUpdate(newCommentState);\n    }\n    this.setState({ isReplying: false });\n  };\n  render() {\n    let name = this.props.comment.author_name;\n    let body = this.reactParse(this.props.comment.content.rendered);\n    let date = this.parseDate(this.props.comment.date);\n    let img = this.props.comment.author_avatar_urls[48];\n    let nestedComments = this.props.nestedComments;\n    let nestedCommentsArray = [];\n    if (nestedComments.length >= 1) {\n      nestedComments.forEach((comment, index) => {\n        let allComments = this.props.allComments;\n        let replyID = comment.id;\n        let moreNestedComments = allComments.filter(\n          comment => comment.parent === replyID\n        );\n        nestedCommentsArray.push(\n          <Comment\n            key={index}\n            comment={comment}\n            index={index}\n            onUpdate={this.commentWasPosted}\n            nestedComments={moreNestedComments}\n            allComments={allComments}\n          />\n        );\n      });\n    }\n    let commentClassName =\n      this.props.comment.customStatus === \"pending\"\n        ? \"comment pending\"\n        : \"comment\";\n    return (\n      <div className={commentClassName} key={this.props.index}>\n        <div className=\"comment-header\">\n          <img src={img} alt=\"Comment avatar\" />\n          <strong className=\"comment-username\">\n            {this.props.comment.author === 1 && <span>★</span>}\n            {name}\n          </strong>\n          <em>#{this.props.comment.id}</em>\n        </div>\n\n        <div\n          className=\"comment-body\"\n          dangerouslySetInnerHTML={{ __html: body }}\n        />\n        <i className=\"comment-date\">\n          {this.props.comment.customStatus !== \"pending\" && (\n            <button onClick={this.showReply}>\n              {this.state.isReplying ? \"Cancel\" : \"Reply\"}\n            </button>\n          )}\n          {date}\n        </i>\n        {this.state.isReplying && (\n          <CommentPoster\n            replyTo={this.props.comment.id}\n            postID={this.props.comment.post}\n            onUpdate={this.commentWasPosted}\n            WPConfig={WPConfig}\n            comments={this.props.allComments}\n          />\n        )}\n        {nestedComments.length >= 1 && (\n          <div className=\"nestedComments\">{nestedCommentsArray}</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Comment;\n","import React from \"react\";\nimport ReactDOMServer from \"react-dom/server\";\nimport Comment from \"./Comment\";\nimport CommentPoster from \"./CommentPoster\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport {\n  FacebookShareButton,\n  RedditShareButton,\n  LinkedinShareButton,\n  TwitterShareButton,\n  EmailShareButton\n} from \"react-share\";\nconst HtmlToReactParser = require(\"html-to-react\").Parser;\n\nclass Articles extends React.Component {\n  state = {\n    blogPosts: [\n      {\n        id: 0,\n        title: { rendered: \"\" },\n        excerpt: { rendered: \"\" },\n        content: { rendered: \"\" },\n        categories: []\n      }\n    ],\n    comments: [\n      {\n        author_name: \"\",\n        content: { rendered: \"\" },\n        author_avatar_urls: { 48: \"\" },\n        date: \"\"\n      }\n    ],\n    categories: [\n      {\n        name: \"\",\n        id: null\n      }\n    ],\n    sortArticles: null,\n    postID: this.props.postID || false,\n    renderComments: false,\n    commentEmail: \"\",\n    commentName: \"\",\n    commentContent: \"\",\n    commentReply: null\n  };\n  componentDidMount() {\n    if (this.state.postID === false) {\n      axios\n        .get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/posts`)\n        .then(res => res.data)\n        .then(blogPosts => {\n          this.setState({\n            blogPosts: blogPosts,\n            loaded: true\n          });\n        });\n      axios\n        .get(`${this.props.WPConfig.siteURL}wp-json/wp/v2/categories`)\n        .then(res => res.data)\n        .then(categories => {\n          this.setState({\n            categories: categories\n          });\n        });\n      this.scrollToTop();\n    } else {\n      axios\n        .get(\n          `${this.props.WPConfig.siteURL}wp-json/wp/v2/posts/?include[]=${this.state.postID}`\n        )\n        .then(res => res.data)\n        .then(blogPosts => {\n          this.setState({\n            blogPosts: blogPosts,\n            loaded: true\n          });\n        });\n      axios\n        .get(\n          `${this.props.WPConfig.siteURL}wp-json/wp/v2/comments/?post=${this.state.postID}`\n        )\n        .then(res => res.data)\n        .then(comments => {\n          this.setState({\n            comments: comments\n          });\n        });\n      this.scrollToTop();\n    }\n  }\n  goToArticle = event => {\n    window.location.href = `${\n      this.props.WPConfig.baseName\n    }post/${event.target.parentElement.getAttribute(\"data-id\")}`;\n  };\n  sortArticles = event => {\n    let categoryID = event.target.getAttribute(\"data-categoryid\");\n    this.setState({ sortArticles: categoryID });\n    this.scrollToTop();\n  };\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n  };\n  reactParse = parse => {\n    let HTMLToReactParser = new HtmlToReactParser();\n    let reactElement = HTMLToReactParser.parse(parse);\n    let string = ReactDOMServer.renderToStaticMarkup(reactElement);\n    return string.replace(\"<code>\", \"<code class='markUpBaby'>\");\n  };\n  parseDate = date => {\n    let y = date.substring(0, 4);\n    let m = date.substring(5, 7);\n    let d = date.substring(8, 10);\n    let h = date.substring(11, 13);\n    let min = date.substring(14, 16);\n    return `${h}:${min} ${d}/${m}/${y}`;\n  };\n  updateComments = newCommentState => {\n    this.setState({ newComments: newCommentState });\n  };\n  goToMusic = () => {\n    window.open(\"https://soundcloud.com/sl1ck\", \"_blank\");\n  };\n  goToCV = () => {\n    window.open(\"https://haakon.underbakke.net/cv\", \"_blank\");\n  };\n  goToContact = () => {\n    window.location.href = \"https://impedans.me/web/contact-me/\";\n  };\n  ignoreAction = event => {\n    event.preventDefault();\n  };\n  goHome = () => {\n    window.location.href = \"/\";\n  };\n  render() {\n    let render = [];\n    let categoryItems = [];\n    this.state.categories.forEach((category, index) => {\n      if (category.id !== 1) {\n        categoryItems.push(\n          <li key={1888 + index} data-id={category.id}>\n            <button onClick={this.sortArticles} data-categoryid={category.id}>\n              {category.name}\n            </button>\n          </li>\n        );\n      }\n    });\n    if (this.state.postID !== false) {\n      categoryItems.push(\n        <li key={1923}>\n          <button onClick={this.goHome}>All posts</button>\n        </li>\n      );\n    }\n    categoryItems.push(\n      <li key={1923} className=\"seperator\">\n        |\n      </li>\n    );\n    render.push(\n      <nav key={9991}>\n        <ul>\n          {categoryItems}\n          <li>\n            <button onClick={this.goToMusic}>Music</button>\n          </li>\n          <li>\n            <button onClick={this.goToContact}>Contact</button>\n          </li>\n          <li>\n            <button onClick={this.goToCV}>CV</button>\n          </li>\n        </ul>\n      </nav>\n    );\n    this.state.blogPosts.forEach((blogPost, index) => {\n      if (\n        this.state.sortArticles === null ||\n        blogPost.categories.includes(parseInt(this.state.sortArticles)) ||\n        blogPost.categories === parseInt(this.state.sortArticles)\n      ) {\n        let title = this.reactParse(blogPost.title.rendered);\n        let body =\n          this.state.postID === false\n            ? this.reactParse(blogPost.excerpt.rendered)\n            : this.reactParse(blogPost.content.rendered);\n        if (this.state.postID === false) {\n          body = body.substring(0, body.length - 9) + \"...</p>\";\n        }\n        let className = this.state.postID === false ? \"collapsed\" : \"open\";\n        /*if (index === 0 && this.state.sortArticles === null) {\n          className = \"open\"; // Latest article should be open on index\n          body = this.reactParse(blogPost.content.rendered);\n        }*/\n        if (!blogPost.categories.includes(1)) {\n          render.push(\n            <article key={index} className={className} data-id={blogPost.id}>\n              <Link\n                to={\"/post/\" + blogPost.id}\n                data-id={blogPost.id}\n                className=\"articleLink\"\n              >\n                <h3\n                  data-id={blogPost.id}\n                  dangerouslySetInnerHTML={{\n                    __html: title\n                  }}\n                ></h3>\n              </Link>\n              <div\n                className=\"body\"\n                onClick={\n                  this.state.postID === false\n                    ? this.goToArticle\n                    : this.ignoreAction\n                }\n                data-id={blogPost.id}\n                dangerouslySetInnerHTML={{\n                  __html: body\n                }}\n              ></div>\n            </article>\n          );\n        }\n      }\n    });\n    if (this.state.postID !== false) {\n      // A specific post is open\n      if (this.state.blogPosts[0].title.rendered !== \"\") {\n        // update meta-data\n        /* document.title =\n          this.reactParse(this.state.blogPosts[0].title.rendered) +\n          \" - Håkon Underbakke\";\n        let newMetaDescription = this.reactParse(\n          this.state.blogPosts[0].excerpt.rendered\n        );\n        newMetaDescription = newMetaDescription.substring(3);\n        newMetaDescription = newMetaDescription.slice(0, -5);\n        document\n          .querySelector('meta[name=\"description\"]')\n          .setAttribute(\"content\", newMetaDescription); */\n        let metaDescription = this.reactParse(\n          this.state.blogPosts[0].excerpt.rendered\n        );\n        metaDescription = metaDescription.substring(3);\n        metaDescription = metaDescription.slice(0, -5);\n        let title = this.reactParse(this.state.blogPosts[0].title.rendered);\n        render.push(\n          <Helmet key=\"123653\">\n            <title>{title}</title>\n            <meta name=\"description\" content={metaDescription} />\n          </Helmet>\n        );\n      }\n      let parentComments = this.state.comments.filter(\n        comment => comment.parent === 0\n      );\n      let url = window.location.href;\n      render.push(<h5 key={9994}>Share on...</h5>);\n      render.push(\n        <div className=\"social\" key={9993}>\n          <FacebookShareButton url={url}>Facebook</FacebookShareButton>\n          <RedditShareButton url={url}>Reddit</RedditShareButton>\n          <LinkedinShareButton url={url}>Linkedin</LinkedinShareButton>\n          <TwitterShareButton url={url}>Twitter</TwitterShareButton>\n          <EmailShareButton url={url}>Email</EmailShareButton>\n        </div>\n      );\n      if (this.state.comments.length === 1) {\n        render.push(<h4 key={9999}>1 Comment</h4>);\n      } else if (this.state.comments.length === 0) {\n        render.push(<h4 key={9999}>Be the first to leave a comment</h4>);\n      } else {\n        render.push(<h4 key={9999}>{this.state.comments.length} Comments</h4>);\n      }\n      render.push(\n        <CommentPoster\n          postID={this.state.postID}\n          onUpdate={this.updateComments}\n          key={9991}\n          WPConfig={this.props.WPConfig}\n          comments={this.state.comments}\n        />\n      );\n      let comments = [];\n      parentComments.forEach((comment, index) => {\n        let parentID = comment.id;\n        let nestedComments = this.state.comments.filter(\n          comment => comment.parent === parentID\n        );\n        comments.push(\n          <Comment\n            comment={comment}\n            index={index}\n            key={index}\n            onUpdate={this.updateComments}\n            nestedComments={nestedComments}\n            allComments={this.state.comments}\n          />\n        );\n      });\n      render.push(\n        <div className=\"comments-container\" key={9998}>\n          {comments}\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        {!this.state.loaded && (\n          <main className=\"showLoading\">Fetching content...</main>\n        )}\n        <main className={this.state.loaded ? \"loaded\" : \"loading\"}>\n          {render}\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Articles;\n","import React from \"react\";\nimport WPConfig from \"../WordpressConfig\";\nimport Articles from \"../components/Articles\";\nimport \"../App.css\";\n\nfunction Index() {\n  return (\n    <React.Fragment>\n      <Articles WPConfig={WPConfig}></Articles>\n    </React.Fragment>\n  );\n}\n\nexport default Index;\n","import React from \"react\";\nimport WPConfig from \"../WordpressConfig\";\nimport Articles from \"../components/Articles\";\nimport \"../App.css\";\n\nclass Post extends React.Component {\n  state = {\n    postID: this.props.match.params.postID || null\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <Articles WPConfig={WPConfig} postID={this.state.postID}></Articles>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Post;\n","import React from \"react\";\nimport \"../App.css\";\nimport axios from \"axios\";\nimport WordpressConfig from \"../WordpressConfig\";\nclass Header extends React.Component {\n  componentDidMount() {\n    axios\n      .get(`${this.props.WPConfig.siteURL}wp-json/`)\n      .then(res => res.data)\n      .then(siteInfo => {\n        this.setState({\n          siteTitle: siteInfo.name,\n          siteDescription: siteInfo.description\n        });\n      });\n  }\n  state = {\n    siteTitle: \"Loading...\",\n    siteDescription: \"...\"\n  };\n  render() {\n    return (\n      <header\n        className={this.state.siteTitle === \"Loading...\" ? \"loading\" : \"loaded\"}\n      >\n        <a href={WordpressConfig.baseName}>\n          <h1>{this.state.siteTitle}</h1>\n        </a>\n        <p>{this.state.siteDescription}</p>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { Route, withRouter } from \"react-router-dom\";\n\nclass ScrollToTopRoute extends Component {\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.path === this.props.location.pathname &&\n      this.props.location.pathname !== prevProps.location.pathname\n    ) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    const { component: Component, ...rest } = this.props;\n\n    return <Route {...rest} render={props => <Component {...props} />} />;\n  }\n}\n\nexport default withRouter(ScrollToTopRoute);\n","import React from \"react\";\nimport Index from \"./pages/Index\";\nimport Post from \"./pages/Post\";\nimport Header from \"./components/Header\";\nimport ScrollToTopRoute from \"./components/ScrollToTopRoute\";\nimport WPConfig from \"./WordpressConfig\";\nimport { Route, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  scrollToTop = () => {\n    window.scrollTo(0, 0);\n    document.body.scrollTop = 0;\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"App\">\n          <Header WPConfig={WPConfig}></Header>\n          <div className=\"minHeight\">\n            <Router\n              basename={WPConfig.baseName}\n              onUpdate={() => window.scrollTo(0, 0)}\n            >\n              <ScrollToTop>\n                <Switch>\n                  <ScrollToTopRoute path=\"/post/:postID\" component={Post} />\n                  <Route path=\"/\" exact={true} component={Index} />\n                  <Route component={Index} />\n                </Switch>\n              </ScrollToTop>\n            </Router>\n          </div>\n        </div>\n        <footer>\n          {\n            //eslint-disable-next-line\n            <a href=\"#\">Back to top</a>\n          }\n        </footer>\n      </React.Fragment>\n    );\n  }\n}\nclass ScrollToTop extends React.Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0);\n    }\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}